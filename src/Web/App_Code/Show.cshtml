@using Core.Models
@using Felice.Core

@functions {

    private static string GetLabelText(MovimentoStatus status)
    {
        switch (status)
        {
            case MovimentoStatus.Aberto:
                return "label";
            case MovimentoStatus.Fechado:
                return "label label-success";
            case MovimentoStatus.FechadoComDiferenca:
                return "label label-important";
            default:
                return string.Empty;
        }
    }
    
}

@helper Conta(Conta conta)
{
    string cssClass = string.Empty;
    
    if (conta.Id == Core.Models.Conta.CaixaId)
    {
        cssClass = "label label-success";
    }
    else if (conta.Id == Core.Models.Conta.ItauId)
    {
        cssClass = "label label-warning";
    }

    <span class="@cssClass">@conta.Nome</span>
}

@helper StatusMovimento(Movimento movimento)
{
    var labelClass = GetLabelText(movimento.Status);
    <span class="@labelClass">@movimento.Status.ToString().PascalToSentence()</span>
}

@helper MovimentoAnterior(Movimento movimento)
{
    <text>Movimento anterior: 
        <strong>@(movimento != null ? movimento.Data.Show() : "Não há")</strong>
    </text>
}

@helper Decimal(decimal value)
{
    if (value != 0)
    {
        var spanClass = value > 0 ? "positive" : "negative";
        <span class="@spanClass">@value.Show()</span>
    }
}